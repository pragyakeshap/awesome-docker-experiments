user nginx-user;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    gzip on;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    server {
        listen 8080;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Main application
        location / {
            try_files $uri $uri/ =404;
        }

        # Health check endpoint for load balancers
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Detailed health check with custom page
        location /health/detailed {
            try_files /health.html =404;
        }

        # Ready check (for Kubernetes)
        location /ready {
            access_log off;
            return 200 "ready\n";
            add_header Content-Type text/plain;
        }

        # Liveness check (for Kubernetes)
        location /live {
            access_log off;
            return 200 "alive\n";
            add_header Content-Type text/plain;
        }

        # Status endpoint with server info
        location /status {
            access_log off;
            default_type application/json;
            return 200 '{"status":"ok","server":"nginx","timestamp":"$time_iso8601","hostname":"$hostname"}';
        }

        # Metrics endpoint (basic)
        location /metrics {
            access_log off;
            stub_status on;
        }

        # Hide server tokens
        server_tokens off;

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
